Coming up:
* Seperation of NetDJ-core (engine) and client functions.
  - all non-server tasks (next number, add request, etc.) should be
    done via XML-interface. Start and stop should be removed from same

FIXME:
* system or user-installation differences
  - state in /var/state or ~/.netdj/state
  - log in /var/log/ or ?
  - playlog in /var/log? og ~/.netdj/playlog


Missing
-------
ENGINE:
* Multiple shares
* Enable directories in lists (especially shares)
* Enable HTTP GET of songs
* Check playlisthistory before playing song (avoid too frequent repeats)
* Add better info about client usage
* Take generic player-command and args from config file
* Do generic full_path-function (with either pwd or home as added path)     
* Enable exchange about listeners, etc. with streaming server
  --> Would enable it to stop playing songs, when noone is listening....


ADMIN INTERFACE
* Remove all non-engine functions (next, request, list, lists, ...)
* Enable logging to file of information written to screen


CLIENT INTERFACE:
* Add feedback to commands
* Make all output XML
* Extra commands
  - request
  - fetch (over http)
  - delete arbitrary files in cache
  - save (not move) file to share
  - list content of all lists
* Enable showing of playlist in sharedir
* Get playing time for songs
* Make playlog available (just previous song for a start)
* Clean up songname?
  - Remove '_' from filenames like Led_Zeppelin-The_Song_Remains_The_Same.mp3
  - Remove additional endings, .mp3.mp3, etc.


APPLET UI:
* Show the ID3-info
* Show proper window instead of tooltip
* FIX: Crashes when there's only one song in the cache-list


WEB UI:
... moved responsibility to PHP. It should basically just utilize
whatever the client interface enables...


GNUT:
* more mature and real blacklist-function for the cache
* check for already existing files in all lists before caching
* Weird idea: connect only to host in a geographical area?


BIG ISSUES
----------
* Use exceptions to enable better errorhandling
* Full seperation of engine and client interface
  - could be done using CORBA. That would enable other interfaces than
    XML. For example a basic text-mode client, to compensate for lack of
    client functions in server.
* Make two program-modes: daemon and interactive
  - make engine-commands oblivious and run in background
  - interactive mode would just mean text-mode client included with core?
* Prioritize playlistchoosing (fx. 60% from share, 40% cache)
* Handle wishes? Send requests through underlying file fetcher
  (ie. search for xxx on gnut, don't download, just search -- would
   maybe trigger caching...)
* Make NetDJ a IRC-bot
  - would enable a community where one could chat about the songs, etc.
  - it could print the log to the channel
  - it could take commands when one 'talked' to it.
* Wild idea: Enable "news-hour", ie. every full our stream the news
  from you local netradio...
* "Work" the MP3-files before broadcasting them
  - re-encode to a constant predefined bitrate
  - equalize to get an even sound level for all songs played
  - clean up filename / ID3
* Store information in a database
  - at least ID3-information to allow better searching
  - 'last played', 'times played' information
  - user stats : '# requests'
  - Example queries:
    + "30 songs not played the last month"
    + "Top-10 this overall / month / year"
* Crazy idea: Have LPD/CUPS-interface, so people can print their MP3-files :)
  - http://patrick.wagstrom.net/weblog/archives/000128.html

CVS: $Id$
